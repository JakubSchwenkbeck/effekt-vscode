{
    "name": "effekt",
    "displayName": "effekt",
    "description": "The Effekt language",
    "repository": {
        "type": "git",
        "url": "https://github.com/effekt-lang/effekt-vscode.git"
    },
    "icon": "icon.png",
    "version": "0.3.0",
    "publisher": "effekt-lang",
    "engines": {
        "vscode": "^1.80.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onLanguage:effekt",
        "onLanguage:literateeffekt"
    ],
    "main": "./out/extension",
    "contributes": {
        "languages": [
            {
                "id": "effekt",
                "extensions": [
                    ".effekt"
                ],
                "aliases": [
                    "Effekt",
                    "effekt"
                ],
                "configuration": "./language-configuration.json",
                "icon": {
                    "light": "./fileicons/lightmode_icon.svg",
                    "dark": "./fileicons/darkmode_icon.svg"
                }
            },
            {
                "id": "literate effekt",
                "extensions": [
                    ".effekt.md"
                ],
                "aliases": [
                    "literate effekt"
                ],
                "configuration": "./language-configuration.json",
                "icon": {
                    "light": "./fileicons/lightmode_icon.svg",
                    "dark": "./fileicons/darkmode_icon.svg"
                }
            },
            {
                "id": "ir",
                "extensions": [
                    ".ir"
                ],
                "aliases": [
                    "ir",
                    "IR"
                ],
                "configuration": "./language-configuration.json",
                "icon": {
                    "light": "./fileicons/lightmode_icon.svg",
                    "dark": "./fileicons/darkmode_icon.svg"
                }
            }
        ],
        "grammars": [
            {
                "language": "effekt",
                "scopeName": "source.effekt",
                "path": "./syntaxes/effekt.tmLanguage.json"
            },
            {
                "language": "literate effekt",
                "scopeName": "source.literateeffekt",
                "path": "./syntaxes/literateeffekt.tmLanguage.json"
            },
            {
                "language": "ir",
                "scopeName": "source.ir",
                "path": "./syntaxes/ir.tmLanguage.json"
            }
        ],
        "configuration": [
            {
                "type": "object",
                "title": "Effekt",
                "properties": {
                    "effekt.executable": {
                        "type": "string",
                        "description": "Path to the effekt executable (you need to restart vscode after changing this setting)."
                    },
                    "effekt.backend": {
                        "type": "string",
                        "default": "js",
                        "enum": [
                            "js",
                            "llvm",
                            "chez-monadic",
                            "chez-callcc",
                            "chez-lift",
                            "ml"
                        ],
                        "enumDescriptions": [
                            "Use the JavaScript backend.",
                            "Use the LLVM backend.",
                            "Use the Chez Scheme backend (monadic).",
                            "Use the Chez Scheme backend (call/cc).",
                            "Use the Chez Scheme backend (lifted).",
                            "Use the MLton backend."
                        ]
                    },
                    "effekt.showExplanations": {
                        "type": "boolean",
                        "default": true,
                        "description": "Display additional information when hovering over identifier."
                    },
                    "effekt.showIR": {
                        "type": "string",
                        "default": "none",
                        "enum": [
                            "none",
                            "source",
                            "core",
                            "machine",
                            "target"
                        ],
                        "enumDescriptions": [
                            "Disable showing intermediate representation.",
                            "Show source tree after parsing.",
                            "Show the core intermediate representation after capability-passing transformation.",
                            "Show the machine representation.",
                            "Show the generated code in the target language."
                        ]
                    },
                    "effekt.showTree": {
                        "type": "boolean",
                        "default": "false",
                        "description": "Show tree of IR instead of rendered version (only relevant if 'showIR' is neither 'none' nor 'js'."
                    },
                    "effekt.lib": {
                        "type": "string",
                        "description": "Path to the standard library."
                    },
                    "effekt.debug": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Connect to a running LSP server in debug mode. This setting is only for development of the VSCode plugin and the Effekt compiler.\n\n⚠️ **WARNING:** For this option to work, you first need to start `effekt --server --debug` as a separate process."
                    }
                }
            },
            {
                "title": "Inlay Hints",
                "order": 10,
                "properties": {
                    "effekt.inlayHints.mode": {
                        "type": "string",
                        "enum": ["On", "Off", "OffUnlessPressed"],
                        "enumDescriptions": [
                            "Inlay hints are always shown",
                            "Inlay hints are never shown",
                            "Inlay hints are shown only when pressing Ctrl+Alt (⌃+⌥ on macOS)"
                        ],
                        "default": "On",
                        "markdownDescription": "Controls whether to show inlay hints.\n\nIf you change the value to **OffUnlessPressed**, you will only see inlay hints when holding Ctrl + Alt (⌃ + ⌥ on macOS).",
                        "scope": "resource",
                        "order": 1
                    },
                    "effekt.inlayHints.typeAnnotations": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Show type annotations for variables and expressions.\n\n```effekt\nval x/* : Int */ = 42\n```",
                        "scope": "resource",
                        "order": 2
                    },
                    "effekt.inlayHints.parameterNames": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Show parameter names at function call sites.\n\n```effekt\ngreet(/* name: */ \"John\", /* age: */ 30)\n```",
                        "scope": "resource",
                        "order": 3
                    },
                    "effekt.inlayHints.captureAnnotations": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "Show captured variables for closures.\n\n```effekt\nval closure = { /* [x] */ x + 1 }\n```",
                        "scope": "resource",
                        "order": 4
                    },
                    "effekt.inlayHints.returnTypes": {
                        "type": "boolean",
                        "default": true, 
                        "markdownDescription": "Show inferred return types for functions.\n\n```effekt\ndef add(a: Int, b: Int)/* : Int */ {\n  a + b\n}\n```",
                        "scope": "resource",
                        "order": 5
                    }
                }
            }
        ],
        "commands": [
            {
                "category": "Effekt",
                "command": "effekt.checkForUpdates",
                "title": "Check for Effekt Updates"
            },
            {
                "category": "Effekt",
                "command": "effekt.restartServer",
                "title": "Restart LSP Server"
            }
        ],
        "keybindings": [
            {
                "key": "ctrl+alt",
                "mac": "ctrl+alt",
                "command": "effekt.showInlayHintsOnKey",
                "when": "editorLangId == effekt && config.effekt.inlayHints.mode == 'OffUnlessPressed'"
            }
        ],
        "configurationDefaults": {
            "[effekt]": {
                "editor.tabSize": 2,
                "editor.insertSpaces": true,
                "editor.detectIndentation": false
            },
            "[literate effekt]": {
                "editor.tabSize": 2,
                "editor.insertSpaces": true,
                "editor.detectIndentation": false
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -b",
        "watch": "tsc -b -w",
        "lint": "eslint ./client/src ./server/src --ext .ts,.tsx"
    },
    "dependencies": {
        "compare-versions": "^6.1.1",
        "vscode-languageclient": "^8.1.0"
    },
    "devDependencies": {
        "@types/mocha": "^10.0.6",
        "@types/node": "^20.11.25",
        "@types/vscode": "^1.80.0",
        "@typescript-eslint/eslint-plugin": "^7.1.0",
        "@typescript-eslint/parser": "^7.1.0",
        "eslint": "^8.57.0",
        "mocha": "^10.3.0",
        "typescript": "^5.3.3"
    }
}